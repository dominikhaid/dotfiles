{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-fd74fe9184ac3019af2202af4398a2b8.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/create-context.js","node_modules/preact/src/constants.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/diff/catch-error.js","src/scripts/components/DataContext.js","node_modules/preact/hooks/src/index.js","src/scripts/utils/utils.js","src/scripts/components/ConnectionContext.js","src/scripts/components/SettingsContext.js","src/scripts/components/Section/Section.js","src/scripts/components/OptionBar/OptionBar.js","src/scripts/components/OptionBarSeparator/OptionBarSeparator.js","src/scripts/components/OptionBarSeparator/OptionBarSeparator.scss","src/scripts/components/OptionBar/OptionBar.scss","src/scripts/components/Section/Section.scss","src/scripts/components/OptionBarButton/OptionBarButton.js","src/scripts/components/SVG.js","src/scripts/components/OptionBarButton/OptionBarButton.scss","src/scripts/components/OptionBarLabel/OptionBarLabel.js","src/scripts/components/OptionBarLabel/OptionBarLabel.scss","src/scripts/components/Context/Context.js","node_modules/@parcel/runtime-js/lib/runtime-aceedf266f607185e8a76a0f88dad5e2.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-dd995676a356fa79c99e423d352ecfea.js","src/scripts/components/Context/Context.scss","src/scripts/components/OrderedContextsList/OrderedContextsList.js","src/scripts/components/OrderedContextsList/OrderedContextsList.scss","src/scripts/components/Spinner/Spinner.js","node_modules/@parcel/runtime-js/lib/runtime-901ca891387663844c46f21e4aca95d9.js","src/scripts/components/Spinner/Spinner.scss","src/scripts/components/ContextsContainer/ContextsContainer.js","src/scripts/components/ContextsContainer/ContextsContainer.scss"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3sgNw\\\":\\\"views\\\\\\\\elements-sidebar\\\\\\\\sidebar-preact.b407c067.js\\\",\\\"33bGg\\\":\\\"inspect.2207ce2e.svg\\\",\\\"3h53B\\\":\\\"intoview.5eb2f78e.svg\\\",\\\"1YPUv\\\":\\\"loader-simple.6fa28a7d.svg\\\",\\\"1ri2j\\\":\\\"views\\\\\\\\elements-sidebar\\\\\\\\sidebar-preact.0426bd8b.css\\\"}\"));","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { h, createContext  } from 'preact';\r\nimport { useContext, useState } from 'preact/hooks';\r\nimport { generateContextTree } from '../utils/utils';\r\nimport { ConnectionContext } from './ConnectionContext';\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst DataContextProvider = ({ children }) => {\r\n\r\n    const { getConnection, setShouldUpdate } = useContext(ConnectionContext);\r\n\r\n    const [contexts, setContextsRaw] = useState([]);\r\n\r\n    const setContexts = (contextList) => {\r\n        // Link all children and parents by their IDs\r\n        generateContextTree(contextList);\r\n        // Update the context\r\n        setContextsRaw(contextList);\r\n    }\r\n\r\n    const refreshContexts = async () => {\r\n        let connection = await getConnection();\r\n\r\n        // TEMP\r\n        let tabId = chrome.devtools.inspectedWindow.tabId;\r\n        let pageContexts = await connection.analysePage(tabId);\r\n\r\n        setContexts(pageContexts);\r\n        setShouldUpdate(false);\r\n    }\r\n\r\n    const cleanContexts = () => {\r\n        setContexts([]);\r\n    }\r\n    \r\n    const getPageFrames = async () => {\r\n        let connection = await getConnection();\r\n        let tabId = chrome.devtools.inspectedWindow.tabId;\r\n        return await connection.getPageFramesSources(tabId);\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={{contexts, refreshContexts, cleanContexts, getPageFrames}}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataContextProvider;","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/**\r\n * Get a list of JSON-friendly stacking contexts that have only the context id set as the parent/children, and links them.\r\n * \r\n * @param {Array<Object>} contextsList A list of contexts with their  \r\n * @returns {Object} A representation of a stacking context adapted for the devtools scripts.\r\n */\r\nexport function generateContextTree(contextsList) {\r\n    let root = contextsList[0];\r\n\r\n    function linkChildren(context) {\r\n        // Get a context from its id (since the ids start from 0, the id is also its index inside the array)\r\n        context.children = context.children.map( (child) => contextsList[child] );\r\n        for (let child of context.children) {\r\n            child.parent = context;\r\n            linkChildren(child);\r\n        }\r\n    }\r\n\r\n    linkChildren(root);\r\n\r\n    return root;\r\n}\r\n\r\nexport function isValuableContainer(container) {\r\n    // Check if has children\r\n    if (container.children.length == 0) return false;\r\n    \r\n    // Check if some children is a stacking context\r\n    if (container.children.some((child) => child.type !== \"container\")) return true;\r\n\r\n    // Check the container children to see if they're valuable to show\r\n    if (container.children.some((child) => isValuableContainer(child))) return true;\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * This function returns an array of objects that represent the path that it takes to get from the main document to an element\r\n * regardless if it is inside an iframe, a shadow DOM or multiples of them. It walks up the documents until it reaches the main one.\r\n * If the element is inside a closed shadow root it will be unreachable, and \"null\" will be returned.\r\n * \r\n * !!! This function will be executed from its string representation, do not use other custom functions inside of it!\r\n * \r\n * @param {Node} node \r\n * @returns {Object[] | null}\r\n */\r\nexport function getPathFromNode(node) {\r\n    \r\n    let curElement = node;\r\n    let path = [];\r\n    let curRoot = null;\r\n\r\n    do {\r\n        // get root node of current element. Might be a shadow-root or an iframe document\r\n        curRoot = curElement.getRootNode();\r\n        \r\n\r\n        let pathFragment = {\r\n            index: Array.from(curRoot.querySelectorAll('*')).findIndex((el) => el === curElement),\r\n            type: \"document\"\r\n        }\r\n    \r\n        if (curRoot instanceof ShadowRoot) {\r\n            // element is inside a shadowRoot\r\n            pathFragment.type = \"shadow\";\r\n            \r\n            // if it's inside a closed shadow root, just return null, since it will be unreachable from the outside\r\n            if (curRoot.mode === \"closed\") {\r\n                return null;\r\n            }\r\n            \r\n            curElement = curRoot.host;\r\n        }\r\n        else if (curRoot !== document) {\r\n            // is inside an iframe\r\n            pathFragment.type = \"iframe\";\r\n\r\n            curElement = curRoot.defaultView.frameElement;\r\n        }\r\n    \r\n        path.push(pathFragment);\r\n\r\n    } while (curRoot !== document);\r\n\r\n    return path.reverse();\r\n}\r\n\r\n/**\r\n * Get a Node from the path generated by the getPathFromNode function\r\n * \r\n * @param {Object} path \r\n * @returns {Node}\r\n */\r\nexport function getNodeFromPath(path) {\r\n    \r\n    let curElement = null;\r\n\r\n    const elementFromIndex = (container, index) => container.querySelectorAll('*')[index];\r\n\r\n    for (let pathFragment of path) {\r\n        switch (pathFragment.type) {\r\n            case \"document\":\r\n                curElement = elementFromIndex(document, pathFragment.index);\r\n                break;\r\n            case \"shadow\":\r\n                curElement = elementFromIndex(curElement.shadowRoot, pathFragment.index);\r\n                break;\r\n            case \"iframe\":\r\n                curElement = elementFromIndex(curElement.contentDocument, pathFragment.index);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return curElement;\r\n}","import { h, createContext } from 'preact';\r\nimport { useState, useEffect } from 'preact/hooks';\r\nimport { BackgroundScript } from '@andreadev/bg-script';\r\n\r\nexport const ConnectionContext = createContext();\r\n\r\nlet bgScript = null;\r\n\r\nasync function notifyVisibilityChange(status) {\r\n    let isActive = status ?? !document.hidden;\r\n\r\n    let connection = await bgScript.getConnection();\r\n    let tabId = chrome.devtools.inspectedWindow.tabId;\r\n    await connection.updateDevtoolsPageStatus(tabId, bgScript.scriptId, isActive);\r\n}\r\n\r\nconst ConnectionContextProvider = ({ scriptId, context, children }) => {\r\n\r\n    let [shouldUpdate, rawSetShouldUpdate] = useState(false);\r\n    let [shouldUpdateSettings, rawSetShouldUpdateSettings] = useState(true);\r\n\r\n    // I did this because I didn't felt like passing the state update function to the library (I thought it could cause problems)\r\n    const setShouldUpdate = (value) => {\r\n        rawSetShouldUpdate(value);\r\n    }\r\n\r\n    const setShouldUpdateSettings = (value) => {\r\n        rawSetShouldUpdateSettings(value);\r\n    }\r\n\r\n    const getConnection = async () => {\r\n        return await bgScript.getConnection();\r\n    }\r\n\r\n    if (bgScript == null) {\r\n        // Init the Background Script handler\r\n        bgScript = new BackgroundScript(scriptId, { setShouldUpdate, setShouldUpdateSettings }, { context });\r\n        // Add the visibilitychange event listener and immediatly notify the current status\r\n        window.addEventListener(\"visibilitychange\", () => notifyVisibilityChange());\r\n        // Handle disconnection\r\n        window.addEventListener(\"unload\", () => notifyVisibilityChange(false));\r\n        notifyVisibilityChange();\r\n    }\r\n\r\n    let providerValue = {\r\n        getConnection,\r\n        shouldUpdate,\r\n        setShouldUpdate,\r\n        shouldUpdateSettings,\r\n        setShouldUpdateSettings\r\n    }\r\n\r\n    return (\r\n        <ConnectionContext.Provider value={providerValue}>\r\n            {children}\r\n        </ConnectionContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ConnectionContextProvider;","import { h, createContext  } from 'preact';\r\nimport { useContext, useState, useEffect } from 'preact/hooks';\r\nimport { ConnectionContext } from './ConnectionContext';\r\n\r\nexport const SettingsContext = createContext();\r\n\r\nconst SettingsContextProvider = ({ children }) => {\r\n\r\n    const {\r\n        getConnection,\r\n        shouldUpdateSettings,\r\n        setShouldUpdateSettings\r\n    } = useContext(ConnectionContext);\r\n\r\n    const [settings, updateSettings] = useState(null);\r\n\r\n    const loadSettings = async function () {\r\n        let connection = await getConnection();\r\n        let loadedSettings = await connection.loadExtensionSettings();\r\n        updateSettings(loadedSettings);\r\n        setShouldUpdateSettings(false);\r\n    }\r\n\r\n    const saveSettings = async function (settings) {\r\n        let connection = await getConnection();\r\n        await connection.saveExtensionSettings(settings);\r\n        await connection.notifySettingsChanged(chrome.devtools.inspectedWindow.tabId);\r\n    }\r\n\r\n    // Initialization and auto updating when needed\r\n    useEffect(() => {\r\n        if (shouldUpdateSettings)\r\n            loadSettings();\r\n    }, [shouldUpdateSettings]);\r\n    \r\n\r\n    if (settings == null) {\r\n        loadSettings();\r\n    }\r\n\r\n    return (\r\n        <SettingsContext.Provider value={{settings, loadSettings, saveSettings}}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContextProvider;","import { h, Fragment } from 'preact';\r\nimport OptionBar from '../OptionBar/OptionBar';\r\n\r\nimport styles from './Section.scss';\r\n\r\nconst Section = ({ title, buttons, children }) => (\r\n    <>\r\n        <OptionBar title={title}>{buttons}</OptionBar>\r\n        <section className={styles.content}>\r\n            {children}\r\n        </section>\r\n    </>\r\n);\r\n\r\nexport default Section;","import { h, Fragment } from 'preact';\r\nimport OptionBarSeparator from '../OptionBarSeparator/OptionBarSeparator';\r\n\r\nimport styles from \"./OptionBar.scss\";\r\n\r\nconst OptionBar = ({ title, children, ...props }) => (\r\n    <div className={styles.optionBar} {...props} >\r\n        {\r\n            title && (\r\n                <>\r\n                    <span className={styles.optionBarTitle}>{title}</span>\r\n                    {\r\n                        children && (\r\n                            <OptionBarSeparator />\r\n                        )\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n        { children }\r\n    </div>\r\n);\r\n\r\nexport default OptionBar;","import { h } from 'preact';\r\n\r\nimport styles from './OptionBarSeparator.scss';\r\n\r\nconst OptionBarSeparator = () => (\r\n    <div className={styles.optionBarSeparator}></div>\r\n);\r\n\r\nexport default OptionBarSeparator;","module.exports[\"optionBarSeparator\"] = \"_optionBarSeparator_845bf4\";","module.exports[\"optionBar\"] = \"_optionBar_acb568\";\nmodule.exports[\"optionBarTitle\"] = \"_optionBarTitle_acb568\";","module.exports[\"content\"] = \"_content_7c45f4\";","import { h } from 'preact';\r\nimport SVG from '../SVG';\r\n\r\nimport styles from \"./OptionBarButton.scss\";\r\n\r\nconst OptionBarButton = ({ text, icon, ...props }) => {\r\n    return (\r\n        <div className={ `${styles.optionBarButton} ${(icon) ? styles.iconBtn : \"\"}` } {...props}>\r\n            {\r\n                text && (\r\n                    <span className={styles.optionBarButtonText}>{text}</span>\r\n                )\r\n            }\r\n            {\r\n                icon && (\r\n                    <SVG src={icon} className={`${styles.optionBarButtonIcon} inline-icon`} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OptionBarButton;","import { h, Fragment } from 'preact';\r\nimport { useEffect, useState } from 'preact/hooks';\r\n\r\n/** Get the single svg element from a string that may contain also other elements */\r\nfunction svgFromString(html) {\r\n    let template = document.createElement('template');\r\n    template.innerHTML = html;\r\n    return template.content.cloneNode(true).querySelector('svg');\r\n}\r\n\r\n/** Get the svg element as a string from a file source */\r\nasync function getSVGHTML(src) {\r\n    let file = await fetch(src);\r\n    let content = await file.text();\r\n    let SVGElement = svgFromString(content);\r\n    return SVGElement.outerHTML;\r\n}\r\n\r\n/** Creates an inline SVG from a source */\r\nconst SVG = ({src, ...props}) => {\r\n\r\n    let [SVGHTML, setSVGHTML] = useState(\"\");\r\n    \r\n    useEffect( async () => {\r\n        let HTML = await getSVGHTML(src);\r\n        setSVGHTML(HTML);\r\n    }, [src]);\r\n\r\n    return (\r\n        <i dangerouslySetInnerHTML={{__html: SVGHTML}} {...props} ></i>\r\n    )\r\n}\r\n\r\nexport default SVG;","module.exports[\"optionBarButton\"] = \"_optionBarButton_627313\";\nmodule.exports[\"iconBtn\"] = \"_iconBtn_627313\";\nmodule.exports[\"optionBarButtonIcon\"] = \"_optionBarButtonIcon_627313\";","import { h } from 'preact';\r\nimport SVG from '../SVG';\r\n\r\nimport styles from \"./OptionBarLabel.scss\";\r\n\r\nconst OptionBarLabel = ({ icon, text, ...props }) => {\r\n    return (\r\n        <div className={styles.optionBarLabel} {...props}>\r\n            {\r\n                icon && (\r\n                    <SVG src={icon} className={`${styles.labelIcon} inline-icon`} />\r\n                )\r\n            }\r\n            {\r\n                text && (\r\n                    <span>{text}</span>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OptionBarLabel;","module.exports[\"optionBarLabel\"] = \"_optionBarLabel_d0b304\";\nmodule.exports[\"labelIcon\"] = \"_labelIcon_d0b304\";","import { h } from 'preact';\r\nimport { useContext } from 'preact/hooks';\r\nimport SVG from '../SVG';\r\nimport { ConnectionContext } from '../ConnectionContext';\r\nimport { getNodeFromPath } from '../../utils/utils';\r\n\r\nimport InspectIcon from '../../../icons/inspect.svg';\r\nimport IntoviewIcon from '../../../icons/intoview.svg';\r\nimport styles from \"./Context.scss\";\r\n\r\nconst Context = ({context, noHighlight=false, delegatedClass=\"\", ...props}) => {\r\n\r\n    let {tagName, id, classes, index} = context.element;\r\n    let tabId = chrome.devtools.inspectedWindow.tabId;\r\n\r\n    let { getConnection } = useContext(ConnectionContext);\r\n\r\n    let inspectNode = async () => {\r\n        let connection = await getConnection();\r\n        let path = await connection.getPathFromContext(tabId, context.id);\r\n        let command = `\r\n            inspect(\r\n                (\r\n                    ${getNodeFromPath.toString()}\r\n                )(${ JSON.stringify(path) })\r\n            )\r\n        `;\r\n        chrome.devtools.inspectedWindow.eval(command);\r\n    }\r\n\r\n    let scrollToNode = async () => {\r\n        let connection = await getConnection();\r\n        await connection.scrollToContext(tabId, context.id);\r\n    }\r\n\r\n    let highlightNode = async () => {\r\n        if (noHighlight) return;\r\n\r\n        let connection = await getConnection();\r\n        await connection.highlightContext(tabId, context.id);\r\n    }\r\n\r\n    let cancelHighlight = async () => {\r\n        if (noHighlight) return;\r\n        \r\n        let connection = await getConnection();\r\n        await connection.undoHighlightContext(tabId);\r\n    }\r\n\r\n    let classNames = `${styles.context} ${delegatedClass}`;\r\n\r\n    return (\r\n        <div className={classNames} onMouseEnter={() => highlightNode()} onMouseLeave={() => cancelHighlight()} {...props}>\r\n            <div className={styles.contextDescriptor}>\r\n                <span className={styles.contextTag}>{tagName}</span>\r\n                {\r\n                    id && (\r\n                        <span className={styles.contextId}>#{id}</span>\r\n                    )\r\n                }\r\n                {\r\n                    !id && classes && classes.length > 0 && (\r\n                        <span className={styles.contextClasses}>.{classes.join('.')}</span>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={styles.contextActions}>\r\n                <SVG src={InspectIcon} className=\"inline-icon\" title=\"Inspect element\" onClick={ () => inspectNode() } />\r\n                <SVG src={IntoviewIcon} className=\"inline-icon\" title=\"Scroll into view\" onClick={ () => scrollToNode() } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Context;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3sgNw\", \"33bGg\")","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3sgNw\", \"3h53B\")","module.exports[\"context\"] = \"_context_f46948\";\nmodule.exports[\"contextTag\"] = \"_contextTag_f46948\";\nmodule.exports[\"contextId\"] = \"_contextId_f46948\";\nmodule.exports[\"contextClasses\"] = \"_contextClasses_f46948\";\nmodule.exports[\"contextActions\"] = \"_contextActions_f46948\";","import { h, Fragment } from 'preact';\r\nimport Context from '../Context/Context';\r\nimport styles from \"./OrderedContextsList.scss\";\r\n\r\nfunction paintOrderFunction(a, b) {\r\n    let aIndex = 0;\r\n    let bIndex = 0;\r\n\r\n    if (a.element.styles.zIndex !== \"auto\") aIndex = parseInt(a.element.styles.zIndex);\r\n    if (b.element.styles.zIndex !== \"auto\") bIndex = parseInt(b.element.styles.zIndex);\r\n\r\n    if (aIndex == 0 && a.element.styles.position !== \"static\") {\r\n        aIndex = 0.5;\r\n    }\r\n    if (bIndex == 0 && b.element.styles.position !== \"static\") {\r\n        bIndex = 0.5;\r\n    }\r\n    \r\n    // When they're the same, the last element in the DOM gets print on top\r\n    aIndex += 0.1; \r\n    \r\n    return bIndex - aIndex;\r\n}\r\n\r\nconst OrderedContextsList = ({contexts}) => {\r\n\r\n    let ordered = [...contexts];\r\n\r\n    ordered = ordered.filter( (context) => context.type !== \"container\" );\r\n\r\n    ordered.sort(paintOrderFunction);\r\n\r\n    return (\r\n        <div className={styles.contextList}>\r\n            {\r\n                ordered.map( (context) => (\r\n                    <div className={styles.contextListItem}>\r\n                        <div className={styles.contextPosition}>\r\n                            {\r\n                                context.element.styles.zIndex !== \"auto\" && (\r\n                                    <>{context.element.styles.zIndex}</>\r\n                                )\r\n                            }\r\n                            {\r\n                                context.element.styles.zIndex == \"auto\" && (\r\n                                    <>{(context.element.styles.position !== \"static\") ? context.element.styles.position : '-'}</>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <Context context={context} />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderedContextsList;","module.exports[\"contextListItem\"] = \"_contextListItem_5ae89a\";\nmodule.exports[\"contextPosition\"] = \"_contextPosition_5ae89a\";","import {h} from 'preact';\r\nimport SVG from '../SVG';\r\n\r\nimport LoaderIcon from '../../../icons/loader-simple.svg';\r\n\r\nimport styles from './Spinner.scss';\r\n\r\nexport const Spinner = ({ position='absolute', width=100, height=100 }) => (\r\n    <div className={styles.spinner} style={{position}}>\r\n        <SVG src={LoaderIcon} style={{width, height}} />\r\n    </div>\r\n);\r\n\r\nexport default Spinner;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3sgNw\", \"1YPUv\")","module.exports[\"spinner\"] = \"_spinner_1e6164\";\nmodule.exports[\"spin\"] = \"_spin_1e6164\";","import { h } from 'preact';\r\nimport { useContext } from 'preact/hooks';\r\nimport { ConnectionContext } from '../ConnectionContext';\r\n\r\nimport styles from \"./ContextsContainer.scss\";\r\n\r\nconst ContextsContainer = ({container, noHighlight, delegatedClass, ...props}) => {\r\n\r\n    let tabId = chrome.devtools.inspectedWindow.tabId;\r\n    let { getConnection } = useContext(ConnectionContext);\r\n\r\n\r\n    let highlightNode = async () => {\r\n        if (noHighlight) return;\r\n\r\n        let connection = await getConnection();\r\n        await connection.highlightContext(tabId, container.id);\r\n    }\r\n\r\n    let cancelHighlight = async () => {\r\n        if (noHighlight) return;\r\n        \r\n        let connection = await getConnection();\r\n        await connection.undoHighlightContext(tabId);\r\n    }\r\n\r\n    let classes = `${styles.contextsContainer} ${delegatedClass}`;\r\n\r\n    return (\r\n        <div\r\n            className={classes}\r\n            onMouseEnter={() => highlightNode()}\r\n            onMouseLeave={() => cancelHighlight()}\r\n            {...props}\r\n        >\r\n            {container.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContextsContainer;","module.exports[\"contextsContainer\"] = \"_contextsContainer_43472b\";"],"names":["$1a07d2027b8f3c711b356b70d6cf7a65$var$mapping","$1a07d2027b8f3c711b356b70d6cf7a65$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$1a07d2027b8f3c711b356b70d6cf7a65$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","call","defaultProps","createVNode","original","vnode","__","__b","__e","__d","undefined","__h","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","createContext","defaultValue","contextId","__c","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","this","forceUpdate","Promise","then","bind","resolve","setTimeout","$3f34a7d2cf1e150d1558785a6c24e4f8$export$ae9fd9727c324ffc","$5ff26","$3f34a7d2cf1e150d1558785a6c24e4f8$export$9099ad97b570f7c","ref1","$22qVs","useContext","$53Rwj","ConnectionContext","getConnection","setShouldUpdate","ref2","$2lHoE","slicedToArray","useState","contexts","setContextsRaw","setContexts","contextList","$2i27S","generateContextTree","refreshContexts","asyncToGenerator","connection","tabId","chrome","devtools","inspectedWindow","pageContexts","analysePage","getPageFrames","getPageFramesSources","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","index","hooks","initialState","reducer","init","hookState","_reducer","invokeOrReturn","action","nextValue","useReducer","useEffect","args","argsChanged","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","filter","hook","comp","oldArgs","newArgs","arg","f","$0136cbda44cc89b6a3366767f5f3578f$export$fb65948bfb36bea7","contextsList","linkChildren","map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","parent","err","return","$0136cbda44cc89b6a3366767f5f3578f$export$7e0cfe067bffce18","container","$0136cbda44cc89b6a3366767f5f3578f$export$fc812c353c5b63ce","curElement","path","curRoot","getRootNode","pathFragment","from","querySelectorAll","findIndex","el","ShadowRoot","mode","host","defaultView","frameElement","reverse","$0136cbda44cc89b6a3366767f5f3578f$export$2dc8b21eb8be3c43","elementFromIndex","shadowRoot","contentDocument","$a654e3e43de943b2c130ec5d25a7937d$export$1114cbaef93bc4fc","$a654e3e43de943b2c130ec5d25a7937d$var$bgScript","_notifyVisibilityChange","status","isActive","hidden","updateDevtoolsPageStatus","scriptId","apply","$a654e3e43de943b2c130ec5d25a7937d$var$notifyVisibilityChange","$a654e3e43de943b2c130ec5d25a7937d$export$9099ad97b570f7c","shouldUpdate","rawSetShouldUpdate","shouldUpdateSettings","rawSetShouldUpdateSettings","setShouldUpdateSettings","$64sVI","BackgroundScript","window","providerValue","$448615b3241f06c3656ff2e01b5bc0fe$export$77e26b0bd53d222f","$448615b3241f06c3656ff2e01b5bc0fe$export$9099ad97b570f7c","settings","updateSettings","loadSettings","loadedSettings","loadExtensionSettings","saveSettings","settings1","saveExtensionSettings","notifySettingsChanged","$a034454b8a42f14049c17faa97a1782f$export$9099ad97b570f7c","title","buttons","$YCsHb","default","h","className","$parcel$interopDefault","$5nJRz","content","$20202f3f2dcf479a2001e156f25396b4$export$9099ad97b570f7c","_param","objectWithoutProperties","objectSpread","$5uzKt","optionBar","optionBarTitle","$312Ip","$631fad190545b27b2a824e714942036b$export$9099ad97b570f7c","$1FSLg","optionBarSeparator","$370d8844cae01691d05e723289ea5546$export$4eea7199fc147d0f","$b47d032f4321a0a606a2b43f51dc7a92$export$957203c1899bdd9d","$b47d032f4321a0a606a2b43f51dc7a92$export$44995fbfce175f02","$b0dd79b62a4ad1236fc688ceee6e0e9d$export$c0df1b5aab89c1b7","$26113e1b10d11f52466a5b59c59499a4$export$9099ad97b570f7c","text","icon","$4JzvB","optionBarButton","iconBtn","optionBarButtonText","$dxldM","src","optionBarButtonIcon","$072ca14d5481607113ef8a28b436259d$var$svgFromString","html","template","cloneNode","querySelector","_getSVGHTML","file","fetch","outerHTML","$072ca14d5481607113ef8a28b436259d$export$9099ad97b570f7c","SVGHTML","setSVGHTML","HTML","$072ca14d5481607113ef8a28b436259d$var$getSVGHTML","__html","$9b94232bb1b4566dfca5983ffee8212e$export$1eebbf198aeb738c","$9b94232bb1b4566dfca5983ffee8212e$export$dcd2d6ffb5e4db07","$9b94232bb1b4566dfca5983ffee8212e$export$28a4471e8be6ffc2","$73fe7134c734fda3bebda5033c81e786$export$9099ad97b570f7c","$3HAWm","optionBarLabel","labelIcon","$79ac94cb59b9706cbff640113613c52d$export$86390358eb8418","$79ac94cb59b9706cbff640113613c52d$export$8bc6cea32ff35b0","$cba2bc1aab3b29cee662a33a4c6b31ba$export$9099ad97b570f7c","_noHighlight","noHighlight","_delegatedClass","delegatedClass","_element","element","tagName","classes","inspectNode","getPathFromContext","command","getNodeFromPath","toString","stringify","eval","scrollToNode","scrollToContext","highlightNode","highlightContext","cancelHighlight","undoHighlightContext","classNames","$01D3X","onMouseEnter","onMouseLeave","contextDescriptor","contextTag","contextClasses","join","contextActions","$7b4dr","onClick","$774dI","module","exports","getBundleURL","$10356d8b7f7c89f7ca181db139e32835$var$bundleURL","$10356d8b7f7c89f7ca181db139e32835$var$getBaseURL","url","$10356d8b7f7c89f7ca181db139e32835$export$da289beea9c5b10d","matches","stack","match","$10356d8b7f7c89f7ca181db139e32835$var$getBundleURL","$38d02ebdb6dfb52e0e54255ed76921ec$var$dirname","_filePath","filePath","slashIndex","lastIndexOf","$38d02ebdb6dfb52e0e54255ed76921ec$var$relative","to","fromParts","split","shift","divergeIndex","toParts","parts","fromId","toId","$38d02ebdb6dfb52e0e54255ed76921ec$require$resolve","_dirname","_relative","$00dd2558a6f21a5c9ad2ac9b356bfbbd$export$3be8e2f7e395f66d","$00dd2558a6f21a5c9ad2ac9b356bfbbd$export$e79c21a393bf4b8f","$00dd2558a6f21a5c9ad2ac9b356bfbbd$export$3f527413c2bcf8aa","$00dd2558a6f21a5c9ad2ac9b356bfbbd$export$39f45da5d4c3bcba","$00dd2558a6f21a5c9ad2ac9b356bfbbd$export$a3f27f503ea94bfc","$c8ac14a3e3c29bb59761472c012a8e45$var$paintOrderFunction","aIndex","bIndex","styles","zIndex","parseInt","position","$c8ac14a3e3c29bb59761472c012a8e45$export$9099ad97b570f7c","ordered","$69Qw6","contextListItem","contextPosition","$6cfOm","$ca5c0d3f353b4e237805c5ced0686d1f$export$ed7c770479e0cbaa","$ca5c0d3f353b4e237805c5ced0686d1f$export$6131ae689e40bd2e","$22231738356a316e9a8304ef5e82caeb$export$9099ad97b570f7c","_position","_width","width","_height","height","$4NhK0","spinner","$3AhIQ","$9d8bed4f6a8e507d49d208ca68e61222$export$e8e2326765462d3e","$9d8bed4f6a8e507d49d208ca68e61222$export$411d6a242f07adf5","$db0b4c050fe977b90e9777c2b96b9ea3$export$9099ad97b570f7c","$6wCNl","contextsContainer","$d66e5dff8f7a2d56854fdce04c6cd0fc$export$f008a197d0711b35"],"version":3,"file":"sidebar-preact.b407c067.js.map"}